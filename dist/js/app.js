'use strict';

$(document).ready(function () {
    var database = {
        questions: [{
            title: 'Вопрос №1',
            radioname: 'one',
            id: ['1', '2', '3'],
            answers: ['Вариант ответа №1', 'Вариант ответа №2', 'Вариант ответа №3'],
            correct: 1
        }, {
            title: 'Вопрос №2',
            radioname: 'two',
            id: ['1', '2', '3'],
            answers: ['Вариант ответа №1', 'Вариант ответа №2', 'Вариант ответа №3'],
            correct: 2
        }, {
            title: 'Вопрос №3',
            radioname: 'three',
            id: ['1', '2', '3'],
            answers: ['Вариант ответа №1', 'Вариант ответа №2', 'Вариант ответа №3'],
            correct: 3
        }]
    };

    localStorage.setItem('test', JSON.stringify(database));

    var data = JSON.parse(localStorage.getItem('test'));

    var html = $('#test').html();
    var content = tmpl(html, data);
    $('body').append(content);

    function showModal(e) {
        e.preventDefault();

        var modal = $('<div class="modal"></div>');
        var result = 0;
        var answer = $('input:checked');
        var correct = [];

        for (var i = 0; i < data.questions.length; i++) {
            correct[i] = data.questions[i].correct;
            if ($(answer[i]).attr('id') == correct[i]) {
                result += 1;
                modal.append('<p class="correct">Ответ на ' + (i + 1) + ' вопрос правильный</p>');
            } else {
                modal.append('<p class="incorrect">Ответ на ' + (i + 1) + ' вопрос неправильный</p>');
            }
        }

        modal.append('<button>Закрыть и начать заново</button>');
        $('body').append(modal);

        $('button').one('click', function (e) {
            e.preventDefault();
            modal.detach();
            $('input').attr('checked', false);
        });
    }

    $('button').on('click', showModal);
});
"use strict";

// Simple JavaScript Templating
// John Resig - http://ejohn.org/ - MIT Licensed
(function () {
    var cache = {};

    this.tmpl = function tmpl(str, data) {
        // Figure out if we're getting a template, or if we need to
        // load the template - and be sure to cache the result.
        var fn = !/\W/.test(str) ? cache[str] = cache[str] || tmpl(document.getElementById(str).innerHTML) :

        // Generate a reusable function that will serve as a template
        // generator (and which will be cached).
        new Function("obj", "var p=[],print=function(){p.push.apply(p,arguments);};" +

        // Introduce the data as local variables using with(){}
        "with(obj){p.push('" +

        // Convert the template into pure JavaScript
        str.replace(/[\r\t\n]/g, " ").split("<%").join("\t").replace(/((^|%>)[^\t]*)'/g, "$1\r").replace(/\t=(.*?)%>/g, "',$1,'").split("\t").join("');").split("%>").join("p.push('").split("\r").join("\\'") + "');}return p.join('');");

        // Provide some basic currying to the user
        return data ? fn(data) : fn;
    };
})();
//# sourceMappingURL=data:application/json;base64,
